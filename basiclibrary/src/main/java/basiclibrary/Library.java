/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;
import java.util.*;

public class Library {
    public static int[] roll(int n) {
        int[] rolls = new int[n];
        for (int i = 0; i < n; i++) {
            rolls[i] = (int) (Math.random() * (6 + 1));
        }
        return rolls;
    }

    public static boolean containsDuplicates(int[] arr) {
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (i != j && arr[i] == arr[j]) return true;
            }
        }
        return false;
    }

    public static double averageCalc(int[] arr) {
        double sum = 0.0;

        for (int i = 0; i < arr.length; i++) {
            sum = sum + arr[i];
        }
        double average = sum / arr.length;
        return average;
    }

    public static double averageCalcNestedArray(int[][] arr) {
        double lowestAvg = Integer.MAX_VALUE;

        for (int i = 0; i < arr.length; i++) {
            double currAvg = averageCalc(arr[i]);
            if (currAvg < lowestAvg) {
                lowestAvg = currAvg;
            }
        }
        return lowestAvg;
    }

    public static void analyzeWeatherData(int[][] weatherData) {
        HashSet<Integer> temps = new HashSet<>();
        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;

        for (int[] weekly : weatherData) {
            for (int daily : weekly) {
                temps.add(daily);
                if (daily < min) min = daily;
                if (daily > max) max = daily;
            }
        }

        System.out.println("High: " + max);
        System.out.println("Low: " + min);

        for (int i = min; i < max; i++) {
            if (!temps.contains(i)) {
                System.out.println("Never saw temperature: " + i);
            }
        }
    }

    public String tally(List<String> list){
        int max = 0;
        String mostVotes = "";

        HashMap<String, Integer> hashMap = new HashMap<>();

        for(String element: list){
            hashMap.put(element, 0);
        }

        for(String element: list){
            if(hashMap.get(element) > max){
                max = hashMap.get(element) + 1;
                mostVotes = element;
            } else {
                hashMap.put(element, hashMap.get(element) + 1);
            }
        }
        return mostVotes;
    }
}

